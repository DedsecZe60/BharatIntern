# House Price Prediction

Welcome to the "House Price Prediction" project, a part of my machine learning portfolio. In this project, I have developed a machine learning model to predict house prices using linear regression.

**Author:** Samithran Ramesh

## Project Overview

- **Algorithm:** Linear Regression
- **Programming Language:** Python

## Dataset

I used a dataset from a CSV file named 'house_data.csv' which includes features like square footage, bedrooms, bathrooms, garage size, and year built to predict house prices.

## Data Preprocessing

- Imported necessary libraries including NumPy, Pandas, Matplotlib, and scikit-learn.
- Loaded the dataset from 'house_data.csv'.
- Selected features (independent variables) and the target (dependent variable).
- Split the data into training and testing sets.

```python
# Import necessary libraries
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

# Load your dataset from the CSV file
data = pd.read_csv('house_data.csv')

# Select features (independent variables) and target (dependent variable)
X = data[['square_feet', 'bedrooms', 'bathrooms', 'garage_size', 'year_built']]
y = data['house_price']

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create a Linear Regression model
model = LinearRegression()

# Fit the model to the training data
model.fit(X_train, y_train)

# Make predictions on the test data
y_pred = model.predict(X_test)

# Calculate the Mean Squared Error to evaluate the model
mse = mean_squared_error(y_test, y_pred)
print(f"Mean Squared Error: {mse}")

# Visualize the results (optional)
plt.scatter(y_test, y_pred)
plt.xlabel("Actual House Prices")
plt.ylabel("Predicted House Prices")
plt.title("Actual vs. Predicted House Prices")
plt.show()
