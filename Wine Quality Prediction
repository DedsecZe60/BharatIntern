# Wine Quality Prediction

Welcome to the "Wine Quality Prediction" project, a part of my machine learning portfolio. In this project, I have developed a machine learning model to predict the quality of wine using linear regression.

**Author:** [Samithran Ramesh]

## Project Overview

- **Algorithm:** Linear Regression
- **Programming Language:** Python

## Dataset

I used a dataset from a CSV file named 'wine_data.csv' which includes features like acidity, alcohol content, pH level, and more to predict the quality of wine.

## Data Preprocessing

- Imported necessary libraries including NumPy, Pandas, Matplotlib, and scikit-learn.
- Loaded the dataset from 'wine_data.csv'.
- Selected features (independent variables) and the target (dependent variable).
- Split the data into training and testing sets.

```python
!pip install pandas scikit-learn
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

# Load the wine quality dataset (you can download it from UCI Machine Learning Repository)
url = "https://archive.ics.uci.edu/ml/machine-learning-databases/wine-quality/winequality-white.csv"
data = pd.read_csv(url, sep=';')

# Define the features (input) and the target (output)
X = data.drop("quality", axis=1)  # Features
y = data["quality"]  # Target

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create a linear regression model
model = LinearRegression()

# Train the model
model.fit(X_train, y_train)

# Make predictions on the test set
y_pred = model.predict(X_test)

# Evaluate the model
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print(f"Mean Squared Error: {mse}")
print(f"R-squared (R2) Score: {r2}")
